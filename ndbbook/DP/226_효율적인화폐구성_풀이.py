'''
inputs
2 15
2
3
output
5
'''

n, m = map(int, input().split())    # n은 동전의 종류(1 <= n <= 100) m은 원하는 돈(1 <= m <= 10000)

array = [int(input()) for _ in range(n)]    # 동전의 종류를 담을 array

d = [10001] * (m+1)     # dp 초기화 (m의 최댓값이 10001이므로 1원으로 10000원을 만들 때가 가장 큰 값이기 때문에 가장 큰 값보다 1큰 10001로 초기화)

d[0] = 0                # 0원은 동전 0개가 필요
for i in range(n):      # 0부터 n까지 (동전 종류의 갯수)
    for j in range(array[i], m+1):  # (A원 짜리 동전의 경우 만들 수 있는 돈의 최소값은 A원 이므로 j의 범위를 A원부터 m원까지)
        if d[j - array[i]] != 10001:    # 만약 j에서 A만큼 뺀 돈을 다른 동전으로 만들 수 있었다면
            d[j] = min(d[j], d[j - array[i]] + 1)   # 원래 j만큼의 돈을 만들 수 있는 경우 필요한 동전의 갯수(초기값은 10001) vs 이번 동전(A원)을 사용할 때

if d[m] == 10001:   # DP테이블에서 idx가 m일 때, value가 초기값 상태 그대로라면
    print(-1)       # 못만든다는 의미의 -1 출력
else:
    print(d[m])     # 그렇지 않을 경우 최소한의 동전 갯수인 d[m] 출력